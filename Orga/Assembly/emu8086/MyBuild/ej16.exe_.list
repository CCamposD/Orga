EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
ej16.exe_ -- emu8086 assembler version: 4.08  
 
[ 6/8/2025  --  8:25:10 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       ;A partir de la direccion 3002 hay un conjunto de datos de
[   2]        :                                       ;longitud dada en la direccion 3001.
[   3]        :                                       ;Almacenar en la direccion 3000 el dato menor.
[   4]        :                                       
[   5]        :                                       .model small
[   6]        :                                       .stack
[   7]        :                                       .data
[   8]        :                                       .code
[   9]        :                                       
[  10]    0100:                                       main PROC
[  11]    0100: B8 10 00                              mov ax,@data
[  12]    0103: 8E D8                                 mov ds, ax
[  13]        :                                       
[  14]        :                                       ; cargo los datos
[  15]        :                                       
[  16]    0105: BE 02 30                              mov si, 3002h
[  17]    0108: 8A 0E 01 30                           mov cl, [3001h]
[  18]        :                                       
[  19]    010C: 8A 04                                 mov al, [si] ; el primero sera menor hasta que se demuestre lo contrario
[  20]    010E: 46                                    inc si
[  21]    010F: FE C9                                 dec cl  ; ya vimos un dato
[  22]        :                                       
[  23]    0111:                                       buscar_menor:
[  24]    0111: 8A 24                                 mov ah, [si]
[  25]    0113: 3A E0                                 cmp ah, al
[  26]    0115: 7D 02                                 jge siguiente ; si ah >= al nada cambia
[  27]    0117: 8A C4                                 mov al, ah
[  28]        :                                       
[  29]    0119:                                       siguiente:
[  30]    0119: 46                                    inc si
[  31]    011A: FE C9                                 dec cl
[  32]    011C: 75 F3                                 jnz buscar_menor
[  33]        :                                       
[  34]    011E: A2 00 30                              mov [03000h], al    ; guardo el dato menor
[  35]        :                                       
[  36]    0121: B4 4C                                 mov ah, 4Ch
[  37]    0123: CD 21                                 int 21h
[  38]        :                                       
[  39]        :                                       main ENDP
[  40]        :                                       END main
[  41]        :                                       
[  42]        :                                       
[  43]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 25      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: F9      -   check sum (l.byte)
0013: 56      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 10      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 10      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
