EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
noname.exe_ -- emu8086 assembler version: 4.08  
 
[ 6/8/2025  --  8:41:14 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       ; Almacenar en la direccion 200 la cantidad de unos que tiene el dato
[   2]        :                                       ; almacenado en la direccion 201
[   3]        :                                       
[   4]        :                                       
[   5]        :                                       .model small
[   6]        :                                       .stack
[   7]        :                                       .data
[   8]        :                                       .code
[   9]        :                                       
[  10]    0100:                                       main PROC
[  11]    0100: B8 10 00                              mov ax,@data
[  12]    0103: 8E D8                                 mov ds, ax
[  13]        :                                       
[  14]    0105: 32 DB                                 xor bl, bl  ; contador de bits en 1 = 0
[  15]    0107: B1 08                                 mov cl, 8   ; 8 bits
[  16]    0109: A0 01 02                              mov al, [0201h]
[  17]        :                                       
[  18]        :                                       
[  19]    010C:                                       contar_bits:
[  20]    010C: D0 E8                                 shr al, 1       ; desplazar a la derecha -< LSV va a CF
[  21]    010E: 73 02                                 jnc siguiente   ; si CF = 0 no hay 1 -> saltar
[  22]    0110: FE C3                                 inc bl          ; si CF = 1 -> contar 1
[  23]        :                                       
[  24]    0112:                                       siguiente:
[  25]    0112: FE C9                                 dec cl
[  26]    0114: 75 F6                                 jnz contar_bits
[  27]        :                                       
[  28]    0116: 88 1E 00 02                           mov [0200h], bl     ; guardo la cantidad de 1s
[  29]        :                                       
[  30]    011A: B4 4C                                 mov ah, 4Ch
[  31]    011C: CD 21                                 int 21h
[  32]        :                                       
[  33]        :                                       main ENDP
[  34]        :                                       END main
[  35]        :                                       
 
===================================================================================================
 
EXE HEADER - bytes from 0000 to 01FF inclusive.

0000: 4D      -   exe signature (M)
0001: 5A      -   exe signature (Z)
0002: 1E      -   bytes on last page (l.byte)
0003: 01      -   bytes on last page (h.byte)
0004: 02      -   512 byte pages in file (l.byte)
0005: 00      -   512 byte pages in file (h.byte)
0006: 01      -   relocations (l.byte)
0007: 00      -   relocations (h.byte)
0008: 20      -   paragraphs in header (l.byte)
0009: 00      -   paragraphs in header (h.byte)
000A: 00      -   minimum memory (l.byte)
000B: 00      -   minimum memory (h.byte)
000C: FF      -   maximum memory (l.byte)
000D: FF      -   maximum memory (h.byte)
000E: 00      -   SS - stack segment (l.byte)
000F: 00      -   SS - stack segment (h.byte)
0010: 00      -   SP - stack pointer (l.byte)
0011: 01      -   SP - stack pointer (h.byte)
0012: 01      -   check sum (l.byte)
0013: 55      -   check sum (h.byte)
0014: 00      -   IP - instruction pointer (l.byte)
0015: 00      -   IP - instruction pointer (h.byte)
0016: 10      -   CS - code segment (l.byte)
0017: 00      -   CS - code segment (h.byte)
0018: 1E      -   relocation table adress (l.byte)
0019: 00      -   relocation table adress (h.byte)
001A: 00      -   overlay number (l.byte)
001B: 00      -   overlay number (h.byte)
001C: 01      -   signature (l.byte)
001D: 00      -   signature (h.byte)
001E: 01      -   relocation table - offset inside segment (l.byte)
001F: 00      -   relocation table - offset inside segment (h.byte)
0020: 10      -   relocation table - segment anchor (l.byte)
0021: 00      -   relocation table - segment anchor (h.byte)
0022 to 01FF  -   reserved relocation area  (00) 




===================================================================================================
