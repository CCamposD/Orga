EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
ej08_sumar.bin_ -- emu8086 assembler version: 4.08  
 
[ 5/13/2025  --  8:36:10 PM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       ;CALCULAR LA SUMA DE 4 DATOS
[   2]        :                                       
[   3]        :                                       ;.MODEL SMALL
[   4]        :                                       ;.STACK ; asigna un STACK de 1K
[   5]        :                                       
[   6]        :                                       .DATA
[   7]        :                                       
[   8]    0000: 01 02 03 12                           DATOSSUM DB 01h, 02h, 03h, 12h
[   9]        :                                       
[  10]        :                                       
[  11]        :                                       .CODE
[  12]        :                                       
[  13]        :                                       
[  14]    0010: B8 00 00                              mov ax, @DATA     ; Poner en AX la dirección de los datos
[  15]    0013: 8E D8                                 mov ds, ax        ; Cargar en el data segment esa dirección
[  16]    0015: 33 DB                                 xor bx, bx        ; indice de acceso al área de datos
[  17]    0017: 32 D2                                 xor dl, dl        ; acumulador de datos
[  18]    0019: B9 04 00                              mov cx, 04h       ; numero de datos a procesar
[  19]        :                                       
[  20]        :                                       
[  21]        :                                       ;CALCULO DE LA SUMA
[  22]        :                                       
[  23]    001C:                                       ACUMULA:
[  24]    001C: 8A 37                                 mov dh, DATOSSUM [BX]
[  25]    001E: 02 17                                 add dl, DATOSSUM [BX]
[  26]    0020: 43                                    inc bx
[  27]    0021: E2 F9                                 loop ACUMULA
[  28]        :                                       
[  29]        :                                       ;MOSTRAR RESULTADO EN PANTALLA
[  30]        :                                       
[  31]        :                                       
[  32]        :                                       ;ADD dl,30h     ; Para los numeros de 1 digito la receta es sumar 30 => 06 + 30 = 36
[  33]    0023: 8A C2                                 mov al, dl    ; muevo 12 a 'al'
[  34]    0025: D4 0A                                 aam
[  35]        :                                       
[  36]    0027: B8 00 B8                              MOV AX,0B800h ; segmento de la memoria de pantalla
[  37]    002A: 8E D8                                 MOV DS,AX     ; apuntar segmento de datos a la misma
[  38]    002C: BB 00 00                              MOV BX,0      ; apuntar al primer carácter ASCII de la pantalla
[  39]    002F: B6 90                                 MOV DH,90h  	; fondo azul
[  40]    0031: 88 27                                 MOV [BX],ah   ; caracter cargado en DL
[  41]    0033: 83 C3 02                              add bx,2
[  42]    0036: 88 07                                 mov [bx],al
[  43]        :                                       
[  44]        :                                       
[  45]        :                                       
[  46]        :                                       
[  47]        :                                       
[  48]        :                                       
[  49]        :                                       END
[  50]        :                                       
 
===================================================================================================
 




===================================================================================================
