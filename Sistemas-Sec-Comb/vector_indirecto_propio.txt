Sumar los elementos de un vector con los siguientes datos:
El comienzo de los datos se encuentra en la dirección 40.
La longitud del vector se encuentra almacenada en 36.
El resultado de la sumatoria se almacena en 38.
El programa se inicia en la dirección 12.

Direcciones   Datos
36             4     Cantidad de datos

38                   Resultado de la suma

40             3     1° dato
41             1
42             2
43             4     último dato

 1° cargar todo lo necesario: 
 M[36] --> R0
 R0 = 4  longitud
 R1 = 40 primer dirección   
 R2 = 1 incrementador 
 R3 = 0 contador de iteraciones (incrementador)
 R4 = 0 Valor inicial del acumulador
 2° Sumar elemento a elemento 
----------------------------------------------------
PROGRAMA
12 1036  R0=M[36]=4 longitud
14 2140  R1 = 40 primer dirección
16 2201	 R2 = 1 incrementador
18 2300	 R3 = 0 contador de iteraciones   
1A 2400  R4 = 0 Acumulador de las sumas
1C 2615  Se guarda en R6 la primer parte de la instrucción 1540
1E 3622  Guarda 15 en 22  

20 3123  Guarda el contenido de R1 en 23 
22 8888  Nada relevante porque el programa reescribe esta dirección (15R1)
24 5445  Aqui R5 va a tener el dato y hacemos R4=R4+R5 (Acumula)
26 5332  Cuenta la iteración R3=R3+R2(1)
28 B32E  Si ya iteró las 4 (R0) veces sale
2A 5112  Incrementa la dirección del dato
2C B020  Salta siempre a escribir la nueva dirección del dato

2E 3438  Guardamos el resultado en M[38]
30 C000  FIN
----------------------------------------------------
PRUEBA DE ESCRITORIO Y SIMULACIÓN

Dirección   instrucción     R0  R1  R2  R3  R4  R5  R6                                                                                                                                                                          
    12          1036        4   -   -   -   -   -   - 
    14          2140        4   40  -   -   -   -   -
    16          2201        4   40  1   -   -   -   -   
    18          2300        4   40  1   0   -   -   -
    1A          2400        4   40  1   0   0   -   -
    1C          2615        4   40  1   0   0   -   15
    1E          3622        4   40  1   0   0   -   15
1° iteración
    20          3123        4   40  1   0   0   -   15
    22          1540        4   40  1   0   0   3   15
    24          5445        4   40  1   0   3   3   15
    26          5332        4   40  1   1   3   3   15
    28          B32E        4   40  1   1   3   3   15
    30          5112        4   41  1   1   3   3   15
    32          B020        4   41  1   1   3   3   15
2° iteración
    20          3123        4   41  1   1   3   3   15
    22          1541        4   41  1   1   3   1   15
    24          5445        4   41  1   1   4   1   15
    26          5332        4   41  1   2   4   1   15
    28          B32E        4   41  1   2   4   1   15
    2A          5112        4   42  1   2   4   1   15
    2C          B020        4   42  1   2   4   1   15
3° iteración
    20          3123        4   42  1   2   4   1   15
    22          1542        4   42  1   2   4   2   15
    24          5445        4   42  1   2   6   2   15
    26          5332        4   42  1   3   6   2   15
    28          B32E        4   42  1   3   6   2   15
    2A          5112        4   43  1   3   6   2   15
    2C          B020        4   43  1   3   6   2   15
4° iteración
    20          3123        4   43  1   3   6   2   15
    22          1543        4   43  1   3   6   4   15
    24          5445        4   43  1   3   10  4   15
    26          5332        4   43  1   4   10  4   15
    28          B32E        4   43  1   4   10  4   15
    2E          3438        4   43  1   4   10  4   15  
    30          C000        4   43  1   4   10  4   15

Resultado final guardado en M[38] = 10

SIMULACIÓN: https://joeledstrom.github.io/brookshear-emu/#B0120000000000000000000000000000000010362140220123002400261536223123154354455332B32E5112B0203438C0000000000004000A0000000000000003010204
